{
  "permissions": {
    "allow": [
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(mkdir:*)",
      "mcp__ide__getDiagnostics",
      "Bash(npm install)",
      "Bash(python:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(mv:*)",
      "Bash(rmdir:*)",
      "Bash(npm install:*)",
      "Bash(task-master init:*)",
      "Bash(npx task-master-ai plan:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git remote add:*)",
      "Bash(git branch:*)",
      "Bash(git push:*)",
      "Bash(git rm:*)",
      "Bash(git filter-branch:*)",
      "Bash(rm:*)",
      "Bash(npx create-next-app:*)",
      "Bash(npm search:*)",
      "Bash(chmod:*)",
      "Bash(./install-mcp-servers.sh:*)",
      "Bash(cp:*)",
      "Bash(cat:*)",
      "Bash(npx husky init:*)",
      "Bash(npm run type-check:*)",
      "Bash(npx prisma:*)",
      "Bash(npm run:*)",
      "Bash(npm uninstall:*)",
      "Bash(DATABASE_URL=\"file:./dev.db\" npx prisma db push)",
      "Bash(DATABASE_URL=\"file:./dev.db\" npm run db:seed)",
      "Bash(curl:*)",
      "Bash(HUSKY=0 git commit -m \"$(cat <<''EOF''\nrefactor: Organize project structure for better maintainability\n\n- Move documentation files to docs/ folder\n  - PLANNING.md, PRD.md, PROJECT_INFO.md\n  - MCP guides and task breakdown documents\n- Move configuration files to config/ folder\n  - CLAUDE_DESKTOP_CONFIG.json, tasks.json\n- Move scripts to scripts/ folder\n  - dev.sh, install-mcp-servers.sh, test-api.js\n- Update README.md with corrected file paths\n- Maintain clean root directory with only essential files\n\nðŸ¤– Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(HUSKY=0 git commit -m \"$(cat <<''EOF''\nfix: Update Task Master status to reflect actual implementation progress\n\n- Updated Phase 1 tasks from pending to completed status\n- Project setup, authentication, dashboard UI, portfolio CRUD complete\n- Backtest engine with 4 strategies fully implemented\n- PDF report generation system working\n- Synchronized task status with actual codebase state\n\nðŸ¤– Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(HUSKY=0 git commit -m \"$(cat <<''EOF''\nfeat: Complete Week 1 - Chart System Implementation\n\nâœ… Week 1 Tasks Completed (14 hours):\n1. Install Recharts library and setup\n2. Create comprehensive chart theme configuration  \n3. Build reusable ChartContainer wrapper component\n4. Implement PieChart component with multiple variants\n5. Create MiniChart components with trend indicators\n\nðŸŽ¨ Chart Components:\n- ChartContainer: Error handling, loading states, dark mode\n- PieChart: Asset allocation, portfolio distribution variants\n- MiniChart: Sparkline, trend, performance chart variants\n- Theme system: Colors, fonts, responsive breakpoints\n\nðŸ“Š Features:\n- TypeScript strict typing\n- Dark/light mode support  \n- Responsive design\n- Error boundaries\n- Loading skeletons\n- Hover interactions\n- Click event handling\n\nðŸš€ Ready for Week 2: Dashboard UI completion\n\nðŸ¤– Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(open http://localhost:4321/dashboard)",
      "Bash(node:*)",
      "Bash(kill:*)",
      "Bash(sqlite3:*)",
      "Bash(npx tsx:*)",
      "Bash(touch:*)"
    ],
    "deny": []
  }
}