
> flux-ai-capital@0.1.0 dev
> next dev --turbopack --port 4321

   ▲ Next.js 15.4.6 (Turbopack)
   - Local:        http://localhost:4321
   - Network:      http://192.168.50.22:4321
   - Environments: .env.local, .env

 ✓ Starting...
 ✓ Compiled middleware in 191ms
 ✓ Ready in 1183ms
 ○ Compiling /api/v1/portfolios/[portfolioId]/transactions ...
 ✓ Compiled /api/v1/portfolios/[portfolioId]/transactions in 768ms
prisma:query SELECT `main`.`portfolios`.`id`, `main`.`portfolios`.`userId`, `main`.`portfolios`.`name`, `main`.`portfolios`.`description`, `main`.`portfolios`.`currency`, `main`.`portfolios`.`isActive`, `main`.`portfolios`.`createdAt`, `main`.`portfolios`.`updatedAt` FROM `main`.`portfolios` WHERE (`main`.`portfolios`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
 POST /api/v1/portfolios/cme239kzb0005sb2tewdfigs2/transactions 404 in 1325ms
 ✓ Compiled /api/v1/portfolios in 79ms
prisma:query SELECT `main`.`portfolios`.`id`, `main`.`portfolios`.`userId`, `main`.`portfolios`.`name`, `main`.`portfolios`.`description`, `main`.`portfolios`.`currency`, `main`.`portfolios`.`isActive`, `main`.`portfolios`.`createdAt`, `main`.`portfolios`.`updatedAt`, COALESCE(`aggr_selection_0_Holding`.`_aggr_count_holdings`, 0) AS `_aggr_count_holdings`, COALESCE(`aggr_selection_1_Transaction`.`_aggr_count_transactions`, 0) AS `_aggr_count_transactions` FROM `main`.`portfolios` LEFT JOIN (SELECT `main`.`holdings`.`portfolioId`, COUNT(*) AS `_aggr_count_holdings` FROM `main`.`holdings` WHERE 1=1 GROUP BY `main`.`holdings`.`portfolioId`) AS `aggr_selection_0_Holding` ON (`main`.`portfolios`.`id` = `aggr_selection_0_Holding`.`portfolioId`) LEFT JOIN (SELECT `main`.`transactions`.`portfolioId`, COUNT(*) AS `_aggr_count_transactions` FROM `main`.`transactions` WHERE 1=1 GROUP BY `main`.`transactions`.`portfolioId`) AS `aggr_selection_1_Transaction` ON (`main`.`portfolios`.`id` = `aggr_selection_1_Transaction`.`portfolioId`) WHERE 1=1 ORDER BY `main`.`portfolios`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`holdings`.`id`, `main`.`holdings`.`portfolioId`, `main`.`holdings`.`symbol`, `main`.`holdings`.`quantity`, `main`.`holdings`.`averagePrice`, `main`.`holdings`.`currentPrice`, `main`.`holdings`.`marketValue`, `main`.`holdings`.`realizedPnL`, `main`.`holdings`.`unrealizedPnL`, `main`.`holdings`.`updatedAt` FROM `main`.`holdings` WHERE `main`.`holdings`.`portfolioId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/v1/portfolios 200 in 105ms
prisma:query SELECT `main`.`portfolios`.`id`, `main`.`portfolios`.`userId`, `main`.`portfolios`.`name`, `main`.`portfolios`.`description`, `main`.`portfolios`.`currency`, `main`.`portfolios`.`isActive`, `main`.`portfolios`.`createdAt`, `main`.`portfolios`.`updatedAt` FROM `main`.`portfolios` WHERE (`main`.`portfolios`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query INSERT INTO `main`.`transactions` (`id`, `portfolioId`, `type`, `symbol`, `quantity`, `price`, `amount`, `fee`, `notes`, `executedAt`, `createdAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?) RETURNING `id` AS `id`, `portfolioId` AS `portfolioId`, `type` AS `type`, `symbol` AS `symbol`, `quantity` AS `quantity`, `price` AS `price`, `amount` AS `amount`, `fee` AS `fee`, `notes` AS `notes`, `executedAt` AS `executedAt`, `createdAt` AS `createdAt`
prisma:query SELECT `main`.`holdings`.`id`, `main`.`holdings`.`portfolioId`, `main`.`holdings`.`symbol`, `main`.`holdings`.`quantity`, `main`.`holdings`.`averagePrice`, `main`.`holdings`.`currentPrice`, `main`.`holdings`.`marketValue`, `main`.`holdings`.`realizedPnL`, `main`.`holdings`.`unrealizedPnL`, `main`.`holdings`.`updatedAt` FROM `main`.`holdings` WHERE ((`main`.`holdings`.`portfolioId` = ? AND `main`.`holdings`.`symbol` = ?) AND 1=1) LIMIT ? OFFSET ?
prisma:query INSERT INTO `main`.`holdings` (`id`, `portfolioId`, `symbol`, `quantity`, `averagePrice`, `currentPrice`, `marketValue`, `realizedPnL`, `unrealizedPnL`, `updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?) RETURNING `id` AS `id`, `portfolioId` AS `portfolioId`, `symbol` AS `symbol`, `quantity` AS `quantity`, `averagePrice` AS `averagePrice`, `currentPrice` AS `currentPrice`, `marketValue` AS `marketValue`, `realizedPnL` AS `realizedPnL`, `unrealizedPnL` AS `unrealizedPnL`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`activities` (`id`, `userId`, `type`, `action`, `metadata`, `createdAt`) VALUES (?,?,?,?,?,?) RETURNING `id` AS `id`, `userId` AS `userId`, `type` AS `type`, `action` AS `action`, `metadata` AS `metadata`, `ipAddress` AS `ipAddress`, `userAgent` AS `userAgent`, `createdAt` AS `createdAt`
 POST /api/v1/portfolios/cme25mvec0005sbglbiphxc6y/transactions 201 in 39ms
 ✓ Compiled /api/v1/portfolios/[portfolioId]/holdings in 95ms
prisma:query SELECT 1
prisma:query SELECT `main`.`holdings`.`id`, `main`.`holdings`.`portfolioId`, `main`.`holdings`.`symbol`, `main`.`holdings`.`quantity`, `main`.`holdings`.`averagePrice`, `main`.`holdings`.`currentPrice`, `main`.`holdings`.`marketValue`, `main`.`holdings`.`realizedPnL`, `main`.`holdings`.`unrealizedPnL`, `main`.`holdings`.`updatedAt` FROM `main`.`holdings` WHERE `main`.`holdings`.`portfolioId` = ? ORDER BY `main`.`holdings`.`marketValue` DESC LIMIT ? OFFSET ?
 GET /api/v1/portfolios/cme25mvec0005sbglbiphxc6y/holdings 200 in 483ms
prisma:query SELECT `main`.`portfolios`.`id`, `main`.`portfolios`.`userId`, `main`.`portfolios`.`name`, `main`.`portfolios`.`description`, `main`.`portfolios`.`currency`, `main`.`portfolios`.`isActive`, `main`.`portfolios`.`createdAt`, `main`.`portfolios`.`updatedAt`, COALESCE(`aggr_selection_0_Holding`.`_aggr_count_holdings`, 0) AS `_aggr_count_holdings`, COALESCE(`aggr_selection_1_Transaction`.`_aggr_count_transactions`, 0) AS `_aggr_count_transactions` FROM `main`.`portfolios` LEFT JOIN (SELECT `main`.`holdings`.`portfolioId`, COUNT(*) AS `_aggr_count_holdings` FROM `main`.`holdings` WHERE 1=1 GROUP BY `main`.`holdings`.`portfolioId`) AS `aggr_selection_0_Holding` ON (`main`.`portfolios`.`id` = `aggr_selection_0_Holding`.`portfolioId`) LEFT JOIN (SELECT `main`.`transactions`.`portfolioId`, COUNT(*) AS `_aggr_count_transactions` FROM `main`.`transactions` WHERE 1=1 GROUP BY `main`.`transactions`.`portfolioId`) AS `aggr_selection_1_Transaction` ON (`main`.`portfolios`.`id` = `aggr_selection_1_Transaction`.`portfolioId`) WHERE 1=1 ORDER BY `main`.`portfolios`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`holdings`.`id`, `main`.`holdings`.`portfolioId`, `main`.`holdings`.`symbol`, `main`.`holdings`.`quantity`, `main`.`holdings`.`averagePrice`, `main`.`holdings`.`currentPrice`, `main`.`holdings`.`marketValue`, `main`.`holdings`.`realizedPnL`, `main`.`holdings`.`unrealizedPnL`, `main`.`holdings`.`updatedAt` FROM `main`.`holdings` WHERE `main`.`holdings`.`portfolioId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/v1/portfolios 200 in 17ms
prisma:query SELECT `main`.`portfolios`.`id`, `main`.`portfolios`.`userId`, `main`.`portfolios`.`name`, `main`.`portfolios`.`description`, `main`.`portfolios`.`currency`, `main`.`portfolios`.`isActive`, `main`.`portfolios`.`createdAt`, `main`.`portfolios`.`updatedAt` FROM `main`.`portfolios` WHERE (`main`.`portfolios`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query INSERT INTO `main`.`transactions` (`id`, `portfolioId`, `type`, `symbol`, `quantity`, `price`, `amount`, `fee`, `notes`, `executedAt`, `createdAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?) RETURNING `id` AS `id`, `portfolioId` AS `portfolioId`, `type` AS `type`, `symbol` AS `symbol`, `quantity` AS `quantity`, `price` AS `price`, `amount` AS `amount`, `fee` AS `fee`, `notes` AS `notes`, `executedAt` AS `executedAt`, `createdAt` AS `createdAt`
prisma:query SELECT `main`.`holdings`.`id`, `main`.`holdings`.`portfolioId`, `main`.`holdings`.`symbol`, `main`.`holdings`.`quantity`, `main`.`holdings`.`averagePrice`, `main`.`holdings`.`currentPrice`, `main`.`holdings`.`marketValue`, `main`.`holdings`.`realizedPnL`, `main`.`holdings`.`unrealizedPnL`, `main`.`holdings`.`updatedAt` FROM `main`.`holdings` WHERE ((`main`.`holdings`.`portfolioId` = ? AND `main`.`holdings`.`symbol` = ?) AND 1=1) LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`holdings` SET `quantity` = ?, `averagePrice` = ?, `currentPrice` = ?, `marketValue` = ?, `unrealizedPnL` = ?, `updatedAt` = ? WHERE (`main`.`holdings`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `portfolioId` AS `portfolioId`, `symbol` AS `symbol`, `quantity` AS `quantity`, `averagePrice` AS `averagePrice`, `currentPrice` AS `currentPrice`, `marketValue` AS `marketValue`, `realizedPnL` AS `realizedPnL`, `unrealizedPnL` AS `unrealizedPnL`, `updatedAt` AS `updatedAt`
prisma:query INSERT INTO `main`.`activities` (`id`, `userId`, `type`, `action`, `metadata`, `createdAt`) VALUES (?,?,?,?,?,?) RETURNING `id` AS `id`, `userId` AS `userId`, `type` AS `type`, `action` AS `action`, `metadata` AS `metadata`, `ipAddress` AS `ipAddress`, `userAgent` AS `userAgent`, `createdAt` AS `createdAt`
 POST /api/v1/portfolios/cme25mvec0005sbglbiphxc6y/transactions 201 in 21ms
prisma:query SELECT `main`.`holdings`.`id`, `main`.`holdings`.`portfolioId`, `main`.`holdings`.`symbol`, `main`.`holdings`.`quantity`, `main`.`holdings`.`averagePrice`, `main`.`holdings`.`currentPrice`, `main`.`holdings`.`marketValue`, `main`.`holdings`.`realizedPnL`, `main`.`holdings`.`unrealizedPnL`, `main`.`holdings`.`updatedAt` FROM `main`.`holdings` WHERE `main`.`holdings`.`portfolioId` = ? ORDER BY `main`.`holdings`.`marketValue` DESC LIMIT ? OFFSET ?
 GET /api/v1/portfolios/cme25mvec0005sbglbiphxc6y/holdings 200 in 22ms
 ✓ Compiled /api/v1/portfolios/[portfolioId]/holdings/update-prices in 63ms
prisma:query SELECT `main`.`holdings`.`id`, `main`.`holdings`.`portfolioId`, `main`.`holdings`.`symbol`, `main`.`holdings`.`quantity`, `main`.`holdings`.`averagePrice`, `main`.`holdings`.`currentPrice`, `main`.`holdings`.`marketValue`, `main`.`holdings`.`realizedPnL`, `main`.`holdings`.`unrealizedPnL`, `main`.`holdings`.`updatedAt` FROM `main`.`holdings` WHERE `main`.`holdings`.`portfolioId` = ? LIMIT ? OFFSET ?
prisma:query UPDATE `main`.`holdings` SET `currentPrice` = ?, `marketValue` = ?, `unrealizedPnL` = ?, `updatedAt` = ? WHERE (`main`.`holdings`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `portfolioId` AS `portfolioId`, `symbol` AS `symbol`, `quantity` AS `quantity`, `averagePrice` AS `averagePrice`, `currentPrice` AS `currentPrice`, `marketValue` AS `marketValue`, `realizedPnL` AS `realizedPnL`, `unrealizedPnL` AS `unrealizedPnL`, `updatedAt` AS `updatedAt`
prisma:query UPDATE `main`.`holdings` SET `currentPrice` = ?, `marketValue` = ?, `unrealizedPnL` = ?, `updatedAt` = ? WHERE (`main`.`holdings`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `portfolioId` AS `portfolioId`, `symbol` AS `symbol`, `quantity` AS `quantity`, `averagePrice` AS `averagePrice`, `currentPrice` AS `currentPrice`, `marketValue` AS `marketValue`, `realizedPnL` AS `realizedPnL`, `unrealizedPnL` AS `unrealizedPnL`, `updatedAt` AS `updatedAt`
prisma:query UPDATE `main`.`holdings` SET `currentPrice` = ?, `marketValue` = ?, `unrealizedPnL` = ?, `updatedAt` = ? WHERE (`main`.`holdings`.`id` = ? AND 1=1) RETURNING `id` AS `id`, `portfolioId` AS `portfolioId`, `symbol` AS `symbol`, `quantity` AS `quantity`, `averagePrice` AS `averagePrice`, `currentPrice` AS `currentPrice`, `marketValue` AS `marketValue`, `realizedPnL` AS `realizedPnL`, `unrealizedPnL` AS `unrealizedPnL`, `updatedAt` AS `updatedAt`
prisma:query SELECT `main`.`holdings`.`id`, `main`.`holdings`.`portfolioId`, `main`.`holdings`.`symbol`, `main`.`holdings`.`quantity`, `main`.`holdings`.`averagePrice`, `main`.`holdings`.`currentPrice`, `main`.`holdings`.`marketValue`, `main`.`holdings`.`realizedPnL`, `main`.`holdings`.`unrealizedPnL`, `main`.`holdings`.`updatedAt` FROM `main`.`holdings` WHERE `main`.`holdings`.`portfolioId` = ? LIMIT ? OFFSET ?
prisma:query INSERT INTO `main`.`performances` (`id`, `portfolioId`, `date`, `totalValue`, `dailyReturn`, `cumReturn`, `createdAt`) VALUES (?,?,?,?,?,?,?) RETURNING `id` AS `id`, `portfolioId` AS `portfolioId`, `date` AS `date`, `totalValue` AS `totalValue`, `dailyReturn` AS `dailyReturn`, `cumReturn` AS `cumReturn`, `createdAt` AS `createdAt`
 POST /api/v1/portfolios/cme25mvec0005sbglbiphxc6y/holdings/update-prices 200 in 393ms
 ✓ Compiled /api/v1/market/prices in 154ms
 GET /api/v1/market/prices?symbols=005930,035420,AAPL 200 in 180ms
 ✓ Compiled middleware in 3ms
 ✓ Compiled /api/v1/portfolios/[portfolioId]/report in 176ms
prisma:query SELECT 1
prisma:query SELECT `main`.`portfolios`.`id`, `main`.`portfolios`.`userId`, `main`.`portfolios`.`name`, `main`.`portfolios`.`description`, `main`.`portfolios`.`currency`, `main`.`portfolios`.`isActive`, `main`.`portfolios`.`createdAt`, `main`.`portfolios`.`updatedAt` FROM `main`.`portfolios` WHERE (`main`.`portfolios`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`holdings`.`id`, `main`.`holdings`.`portfolioId`, `main`.`holdings`.`symbol`, `main`.`holdings`.`quantity`, `main`.`holdings`.`averagePrice`, `main`.`holdings`.`currentPrice`, `main`.`holdings`.`marketValue`, `main`.`holdings`.`realizedPnL`, `main`.`holdings`.`unrealizedPnL`, `main`.`holdings`.`updatedAt` FROM `main`.`holdings` WHERE `main`.`holdings`.`portfolioId` IN (?) ORDER BY `main`.`holdings`.`marketValue` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`transactions`.`id`, `main`.`transactions`.`portfolioId`, `main`.`transactions`.`type`, `main`.`transactions`.`symbol`, `main`.`transactions`.`quantity`, `main`.`transactions`.`price`, `main`.`transactions`.`amount`, `main`.`transactions`.`fee`, `main`.`transactions`.`notes`, `main`.`transactions`.`executedAt`, `main`.`transactions`.`createdAt` FROM `main`.`transactions` WHERE `main`.`transactions`.`portfolioId` IN (?) ORDER BY `main`.`transactions`.`executedAt` DESC LIMIT ? OFFSET ?
 GET /api/v1/portfolios/cme25mvec0005sbglbiphxc6y/report 200 in 1425ms
prisma:query SELECT 1
prisma:query SELECT `main`.`portfolios`.`id`, `main`.`portfolios`.`userId`, `main`.`portfolios`.`name`, `main`.`portfolios`.`description`, `main`.`portfolios`.`currency`, `main`.`portfolios`.`isActive`, `main`.`portfolios`.`createdAt`, `main`.`portfolios`.`updatedAt`, COALESCE(`aggr_selection_0_Holding`.`_aggr_count_holdings`, 0) AS `_aggr_count_holdings`, COALESCE(`aggr_selection_1_Transaction`.`_aggr_count_transactions`, 0) AS `_aggr_count_transactions` FROM `main`.`portfolios` LEFT JOIN (SELECT `main`.`holdings`.`portfolioId`, COUNT(*) AS `_aggr_count_holdings` FROM `main`.`holdings` WHERE 1=1 GROUP BY `main`.`holdings`.`portfolioId`) AS `aggr_selection_0_Holding` ON (`main`.`portfolios`.`id` = `aggr_selection_0_Holding`.`portfolioId`) LEFT JOIN (SELECT `main`.`transactions`.`portfolioId`, COUNT(*) AS `_aggr_count_transactions` FROM `main`.`transactions` WHERE 1=1 GROUP BY `main`.`transactions`.`portfolioId`) AS `aggr_selection_1_Transaction` ON (`main`.`portfolios`.`id` = `aggr_selection_1_Transaction`.`portfolioId`) WHERE 1=1 ORDER BY `main`.`portfolios`.`createdAt` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`users`.`id`, `main`.`users`.`email`, `main`.`users`.`name` FROM `main`.`users` WHERE `main`.`users`.`id` IN (?) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`holdings`.`id`, `main`.`holdings`.`portfolioId`, `main`.`holdings`.`symbol`, `main`.`holdings`.`quantity`, `main`.`holdings`.`averagePrice`, `main`.`holdings`.`currentPrice`, `main`.`holdings`.`marketValue`, `main`.`holdings`.`realizedPnL`, `main`.`holdings`.`unrealizedPnL`, `main`.`holdings`.`updatedAt` FROM `main`.`holdings` WHERE `main`.`holdings`.`portfolioId` IN (?,?) LIMIT ? OFFSET ?
 GET /api/v1/portfolios 200 in 20ms
prisma:query SELECT `main`.`portfolios`.`id`, `main`.`portfolios`.`userId`, `main`.`portfolios`.`name`, `main`.`portfolios`.`description`, `main`.`portfolios`.`currency`, `main`.`portfolios`.`isActive`, `main`.`portfolios`.`createdAt`, `main`.`portfolios`.`updatedAt` FROM `main`.`portfolios` WHERE (`main`.`portfolios`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`holdings`.`id`, `main`.`holdings`.`portfolioId`, `main`.`holdings`.`symbol`, `main`.`holdings`.`quantity`, `main`.`holdings`.`averagePrice`, `main`.`holdings`.`currentPrice`, `main`.`holdings`.`marketValue`, `main`.`holdings`.`realizedPnL`, `main`.`holdings`.`unrealizedPnL`, `main`.`holdings`.`updatedAt` FROM `main`.`holdings` WHERE `main`.`holdings`.`portfolioId` IN (?) ORDER BY `main`.`holdings`.`marketValue` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`transactions`.`id`, `main`.`transactions`.`portfolioId`, `main`.`transactions`.`type`, `main`.`transactions`.`symbol`, `main`.`transactions`.`quantity`, `main`.`transactions`.`price`, `main`.`transactions`.`amount`, `main`.`transactions`.`fee`, `main`.`transactions`.`notes`, `main`.`transactions`.`executedAt`, `main`.`transactions`.`createdAt` FROM `main`.`transactions` WHERE `main`.`transactions`.`portfolioId` IN (?) ORDER BY `main`.`transactions`.`executedAt` DESC LIMIT ? OFFSET ?
 GET /api/v1/portfolios/cme25mvec0005sbglbiphxc6y/report 200 in 130ms
prisma:query SELECT `main`.`portfolios`.`id`, `main`.`portfolios`.`userId`, `main`.`portfolios`.`name`, `main`.`portfolios`.`description`, `main`.`portfolios`.`currency`, `main`.`portfolios`.`isActive`, `main`.`portfolios`.`createdAt`, `main`.`portfolios`.`updatedAt` FROM `main`.`portfolios` WHERE (`main`.`portfolios`.`id` = ? AND 1=1) LIMIT ? OFFSET ?
prisma:query SELECT `main`.`holdings`.`id`, `main`.`holdings`.`portfolioId`, `main`.`holdings`.`symbol`, `main`.`holdings`.`quantity`, `main`.`holdings`.`averagePrice`, `main`.`holdings`.`currentPrice`, `main`.`holdings`.`marketValue`, `main`.`holdings`.`realizedPnL`, `main`.`holdings`.`unrealizedPnL`, `main`.`holdings`.`updatedAt` FROM `main`.`holdings` WHERE `main`.`holdings`.`portfolioId` IN (?) ORDER BY `main`.`holdings`.`marketValue` DESC LIMIT ? OFFSET ?
prisma:query SELECT `main`.`transactions`.`id`, `main`.`transactions`.`portfolioId`, `main`.`transactions`.`type`, `main`.`transactions`.`symbol`, `main`.`transactions`.`quantity`, `main`.`transactions`.`price`, `main`.`transactions`.`amount`, `main`.`transactions`.`fee`, `main`.`transactions`.`notes`, `main`.`transactions`.`executedAt`, `main`.`transactions`.`createdAt` FROM `main`.`transactions` WHERE `main`.`transactions`.`portfolioId` IN (?) ORDER BY `main`.`transactions`.`executedAt` DESC LIMIT ? OFFSET ?
 GET /api/v1/portfolios/cme25mvea0003sbglgbbmm79s/report 200 in 128ms
 ✓ Compiled middleware in 1ms
 ✓ Compiled middleware in 1ms
 ✓ Compiled /api/v1/backtest in 251ms
 POST /api/v1/backtest 200 in 413ms
 GET /api/v1/backtest 200 in 16ms
